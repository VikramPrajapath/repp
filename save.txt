// Structure for a complete Angular application to parse JSON data
// File: src/app/models/data.model.ts

export interface Student {
  id: string;
  name: string;
  age: number;
  gender: string;
  grade: string;
}

export interface Class {
  id: string;
  name: string;
  students: Student[];
}

export interface Department {
  id: string;
  name: string;
  classes: Class[];
}

export interface College {
  id: string;
  name: string;
  location: string;
  departments: Department[];
}

// File: src/app/services/data.service.ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject, Observable, of } from 'rxjs';
import { tap } from 'rxjs/operators';
import { College, Department, Class, Student } from '../models/data.model';

@Injectable({
  providedIn: 'root'
})
export class DataService {
  private colleges: College[] = [];
  private dataSubject = new BehaviorSubject<College[]>([]);

  constructor(private http: HttpClient) { }

  // Load data from JSON file or API
  loadData(): Observable<College[]> {
    // In a real application, you would load from an API:
    // return this.http.get<any>('api/colleges').pipe(
    //   tap(data => this.parseAndStoreData(data))
    // );
    
    // For demo purposes, use mockData
    return of(this.mockData()).pipe(
      tap(data => this.parseAndStoreData(data))
    );
  }

  // Parse JSON data and store it in memory
  parseAndStoreData(data: any): void {
    this.colleges = this.mapToColleges(data);
    this.dataSubject.next(this.colleges);
  }

  // Get all colleges
  getColleges(): Observable<College[]> {
    return this.dataSubject.asObservable();
  }

  // Get all departments
  getAllDepartments(): Department[] {
    let departments: Department[] = [];
    this.colleges.forEach(college => {
      departments = [...departments, ...college.departments];
    });
    return departments;
  }

  // Get departments by college ID
  getDepartmentsByCollege(collegeId: string): Department[] {
    const college = this.colleges.find(c => c.id === collegeId);
    return college ? college.departments : [];
  }

  // Get all classes
  getAllClasses(): Class[] {
    let classes: Class[] = [];
    this.getAllDepartments().forEach(dept => {
      classes = [...classes, ...dept.classes];
    });
    return classes;
  }

  // Get classes by department ID
  getClassesByDepartment(deptId: string): Class[] {
    const department = this.findDepartmentById(deptId);
    return department ? department.classes : [];
  }

  // Get all students
  getAllStudents(): Student[] {
    let students: Student[] = [];
    this.getAllClasses().forEach(cls => {
      students = [...students, ...cls.students];
    });
    return students;
  }

  // Get students by class ID
  getStudentsByClass(classId: string): Student[] {
    const cls = this.findClassById(classId);
    return cls ? cls.students : [];
  }

  // Find student by ID or name
  findStudent(query: string): Student | null {
    const students = this.getAllStudents();
    return students.find(s => s.id === query || s.name.toLowerCase().includes(query.toLowerCase())) || null;
  }

  // Helper method to find department by ID
  private findDepartmentById(deptId: string): Department | null {
    for (const college of this.colleges) {
      const dept = college.departments.find(d => d.id === deptId);
      if (dept) return dept;
    }
    return null;
  }

  // Helper method to find class by ID
  private findClassById(classId: string): Class | null {
    for (const dept of this.getAllDepartments()) {
      const cls = dept.classes.find(c => c.id === classId);
      if (cls) return cls;
    }
    return null;
  }

  // Map JSON data to our model
  private mapToColleges(data: any): College[] {
    try {
      // Assuming data is an array of colleges
      return data.map((collegeData: any) => ({
        id: collegeData.id,
        name: collegeData.name,
        location: collegeData.location,
        departments: this.mapToDepartments(collegeData.departments || [])
      }));
    } catch (error) {
      console.error('Error parsing data:', error);
      return [];
    }
  }

  private mapToDepartments(departmentsData: any[]): Department[] {
    return departmentsData.map(deptData => ({
      id: deptData.id,
      name: deptData.name,
      classes: this.mapToClasses(deptData.classes || [])
    }));
  }

  private mapToClasses(classesData: any[]): Class[] {
    return classesData.map(classData => ({
      id: classData.id,
      name: classData.name,
      students: this.mapToStudents(classData.students || [])
    }));
  }

  private mapToStudents(studentsData: any[]): Student[] {
    return studentsData.map(studentData => ({
      id: studentData.id,
      name: studentData.name,
      age: studentData.age,
      gender: studentData.gender,
      grade: studentData.grade
    }));
  }

  // Mock data for development purposes
  private mockData(): any {
    return [
      {
        id: "c1",
        name: "Engineering College",
        location: "New York",
        departments: [
          {
            id: "d1",
            name: "Computer Science",
            classes: [
              {
                id: "cs101",
                name: "Introduction to Programming",
                students: [
                  {
                    id: "s1",
                    name: "John Smith",
                    age: 20,
                    gender: "Male",
                    grade: "A"
                  },
                  {
                    id: "s2",
                    name: "Jane Doe",
                    age: 19,
                    gender: "Female",
                    grade: "A+"
                  }
                ]
              },
              {
                id: "cs201",
                name: "Data Structures",
                students: [
                  {
                    id: "s3",
                    name: "Bob Johnson",
                    age: 21,
                    gender: "Male",
                    grade: "B+"
                  }
                ]
              }
            ]
          },
          {
            id: "d2",
            name: "Electrical Engineering",
            classes: [
              {
                id: "ee101",
                name: "Circuit Theory",
                students: [
                  {
                    id: "s4",
                    name: "Alice Brown",
                    age: 20,
                    gender: "Female",
                    grade: "A-"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        id: "c2",
        name: "Business School",
        location: "Boston",
        departments: [
          {
            id: "d3",
            name: "Management",
            classes: [
              {
                id: "m101",
                name: "Principles of Management",
                students: [
                  {
                    id: "s5",
                    name: "Tom Wilson",
                    age: 22,
                    gender: "Male",
                    grade: "B"
                  },
                  {
                    id: "s6",
                    name: "Sarah Lee",
                    age: 20,
                    gender: "Female",
                    grade: "A"
                  }
                ]
              }
            ]
          }
        ]
      }
    ];
  }
}

// File: src/app/components/colleges/colleges.component.ts

import { Component, OnInit } from '@angular/core';
import { College } from '../../models/data.model';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-colleges',
  templateUrl: './colleges.component.html',
  styleUrls: ['./colleges.component.css']
})
export class CollegesComponent implements OnInit {
  colleges: College[] = [];

  constructor(private dataService: DataService) { }

  ngOnInit(): void {
    this.dataService.getColleges().subscribe(
      colleges => this.colleges = colleges
    );
  }
}

// File: src/app/components/colleges/colleges.component.html

<div class="colleges-container">
  <h2>Colleges</h2>
  <div class="card-grid">
    <div *ngFor="let college of colleges" class="card">
      <div class="card-header">
        <h3>{{ college.name }}</h3>
      </div>
      <div class="card-body">
        <p><strong>Location:</strong> {{ college.location }}</p>
        <p><strong>Departments:</strong> {{ college.departments.length }}</p>
      </div>
      <div class="card-footer">
        <a [routerLink]="['/departments', college.id]" class="btn">View Departments</a>
      </div>
    </div>
  </div>
</div>

// File: src/app/components/departments/departments.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Department } from '../../models/data.model';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-departments',
  templateUrl: './departments.component.html',
  styleUrls: ['./departments.component.css']
})
export class DepartmentsComponent implements OnInit {
  departments: Department[] = [];
  collegeId: string | null = null;

  constructor(
    private dataService: DataService,
    private route: ActivatedRoute
  ) { }

  ngOnInit(): void {
    this.route.paramMap.subscribe(params => {
      this.collegeId = params.get('collegeId');
      
      if (this.collegeId) {
        // Load departments for specific college
        this.departments = this.dataService.getDepartmentsByCollege(this.collegeId);
      } else {
        // Load all departments
        this.departments = this.dataService.getAllDepartments();
      }
    });
  }
}

// File: src/app/components/departments/departments.component.html

<div class="departments-container">
  <h2>Departments</h2>
  <div class="card-grid">
    <div *ngFor="let department of departments" class="card">
      <div class="card-header">
        <h3>{{ department.name }}</h3>
      </div>
      <div class="card-body">
        <p><strong>Classes:</strong> {{ department.classes.length }}</p>
      </div>
      <div class="card-footer">
        <a [routerLink]="['/classes', department.id]" class="btn">View Classes</a>
      </div>
    </div>
  </div>
</div>

// File: src/app/components/classes/classes.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Class } from '../../models/data.model';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-classes',
  templateUrl: './classes.component.html',
  styleUrls: ['./classes.component.css']
})
export class ClassesComponent implements OnInit {
  classes: Class[] = [];
  departmentId: string | null = null;

  constructor(
    private dataService: DataService,
    private route: ActivatedRoute
  ) { }

  ngOnInit(): void {
    this.route.paramMap.subscribe(params => {
      this.departmentId = params.get('departmentId');
      
      if (this.departmentId) {
        // Load classes for specific department
        this.classes = this.dataService.getClassesByDepartment(this.departmentId);
      } else {
        // Load all classes
        this.classes = this.dataService.getAllClasses();
      }
    });
  }
}

// File: src/app/components/classes/classes.component.html

<div class="classes-container">
  <h2>Classes</h2>
  <div class="card-grid">
    <div *ngFor="let class of classes" class="card">
      <div class="card-header">
        <h3>{{ class.name }}</h3>
      </div>
      <div class="card-body">
        <p><strong>Students:</strong> {{ class.students.length }}</p>
      </div>
      <div class="card-footer">
        <a [routerLink]="['/students', class.id]" class="btn">View Students</a>
      </div>
    </div>
  </div>
</div>

// File: src/app/components/students/students.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Student } from '../../models/data.model';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-students',
  templateUrl: './students.component.html',
  styleUrls: ['./students.component.css']
})
export class StudentsComponent implements OnInit {
  students: Student[] = [];
  classId: string | null = null;

  constructor(
    private dataService: DataService,
    private route: ActivatedRoute
  ) { }

  ngOnInit(): void {
    this.route.paramMap.subscribe(params => {
      this.classId = params.get('classId');
      
      if (this.classId) {
        // Load students for specific class
        this.students = this.dataService.getStudentsByClass(this.classId);
      } else {
        // Load all students
        this.students = this.dataService.getAllStudents();
      }
    });
  }
}

// File: src/app/components/students/students.component.html

<div class="students-container">
  <h2>Students</h2>
  <table class="student-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Age</th>
        <th>Gender</th>
        <th>Grade</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <tr *ngFor="let student of students">
        <td>{{ student.id }}</td>
        <td>{{ student.name }}</td>
        <td>{{ student.age }}</td>
        <td>{{ student.gender }}</td>
        <td>{{ student.grade }}</td>
        <td>
          <a [routerLink]="['/student-details', student.id]" class="btn btn-small">View Details</a>
        </td>
      </tr>
    </tbody>
  </table>
</div>

// File: src/app/components/student-search/student-search.component.ts

import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { Student } from '../../models/data.model';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-student-search',
  templateUrl: './student-search.component.html',
  styleUrls: ['./student-search.component.css']
})
export class StudentSearchComponent {
  searchQuery: string = '';
  searchResult: Student | null = null;
  searchPerformed: boolean = false;

  constructor(
    private dataService: DataService,
    private router: Router
  ) { }

  searchStudent(): void {
    this.searchPerformed = true;
    this.searchResult = this.dataService.findStudent(this.searchQuery);
  }

  viewDetails(studentId: string): void {
    this.router.navigate(['/student-details', studentId]);
  }
}

// File: src/app/components/student-search/student-search.component.html

<div class="search-container">
  <h2>Student Search</h2>
  <div class="search-form">
    <input 
      type="text" 
      [(ngModel)]="searchQuery" 
      placeholder="Enter student ID or name" 
      class="search-input"
    >
    <button (click)="searchStudent()" class="btn search-btn">Search</button>
  </div>
  
  <div *ngIf="searchPerformed" class="search-results">
    <div *ngIf="searchResult; else noResults">
      <h3>Search Results</h3>
      <div class="student-card">
        <h4>{{ searchResult.name }}</h4>
        <p><strong>ID:</strong> {{ searchResult.id }}</p>
        <p><strong>Age:</strong> {{ searchResult.age }}</p>
        <p><strong>Gender:</strong> {{ searchResult.gender }}</p>
        <p><strong>Grade:</strong> {{ searchResult.grade }}</p>
        <button (click)="viewDetails(searchResult.id)" class="btn">View Details</button>
      </div>
    </div>
    <ng-template #noResults>
      <p class="no-results">No student found with ID or name "{{ searchQuery }}"</p>
    </ng-template>
  </div>
</div>

// File: src/app/components/student-details/student-details.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Student } from '../../models/data.model';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-student-details',
  templateUrl: './student-details.component.html',
  styleUrls: ['./student-details.component.css']
})
export class StudentDetailsComponent implements OnInit {
  student: Student | null = null;

  constructor(
    private dataService: DataService,
    private route: ActivatedRoute
  ) { }

  ngOnInit(): void {
    this.route.paramMap.subscribe(params => {
      const studentId = params.get('studentId');
      if (studentId) {
        this.student = this.dataService.findStudent(studentId);
      }
    });
  }
}

// File: src/app/components/student-details/student-details.component.html

<div class="student-details-container">
  <div *ngIf="student; else notFound">
    <h2>Student Details</h2>
    <div class="student-card">
      <h3>{{ student.name }}</h3>
      <div class="student-info">
        <p><strong>ID:</strong> {{ student.id }}</p>
        <p><strong>Age:</strong> {{ student.age }}</p>
        <p><strong>Gender:</strong> {{ student.gender }}</p>
        <p><strong>Grade:</strong> {{ student.grade }}</p>
      </div>
    </div>
  </div>
  <ng-template #notFound>
    <div class="not-found">
      <h2>Student Not Found</h2>
      <p>The requested student could not be found.</p>
      <a routerLink="/students" class="btn">Back to Students</a>
    </div>
  </ng-template>
</div>

// File: src/app/app-routing.module.ts

import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { CollegesComponent } from './components/colleges/colleges.component';
import { DepartmentsComponent } from './components/departments/departments.component';
import { ClassesComponent } from './components/classes/classes.component';
import { StudentsComponent } from './components/students/students.component';
import { StudentDetailsComponent } from './components/student-details/student-details.component';
import { StudentSearchComponent } from './components/student-search/student-search.component';
import { HomeComponent } from './components/home/home.component';

const routes: Routes = [
  { path: '', component: HomeComponent },
  { path: 'colleges', component: CollegesComponent },
  { path: 'departments', component: DepartmentsComponent },
  { path: 'departments/:collegeId', component: DepartmentsComponent },
  { path: 'classes', component: ClassesComponent },
  { path: 'classes/:departmentId', component: ClassesComponent },
  { path: 'students', component: StudentsComponent },
  { path: 'students/:classId', component: StudentsComponent },
  { path: 'student-details/:studentId', component: StudentDetailsComponent },
  { path: 'search', component: StudentSearchComponent },
  { path: '**', redirectTo: '' }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

// File: src/app/components/home/home.component.ts

import { Component, OnInit } from '@angular/core';
import { DataService } from '../../services/data.service';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {
  totalColleges: number = 0;
  totalDepartments: number = 0;
  totalClasses: number = 0;
  totalStudents: number = 0;

  constructor(private dataService: DataService) { }

  ngOnInit(): void {
    // Load the data
    this.dataService.loadData().subscribe(() => {
      this.updateStatistics();
    });
  }

  private updateStatistics(): void {
    this.dataService.getColleges().subscribe(colleges => {
      this.totalColleges = colleges.length;
      this.totalDepartments = this.dataService.getAllDepartments().length;
      this.totalClasses = this.dataService.getAllClasses().length;
      this.totalStudents = this.dataService.getAllStudents().length;
    });
  }
}

// File: src/app/components/home/home.component.html

<div class="home-container">
  <h1>Education Data Management System</h1>
  
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-value">{{ totalColleges }}</div>
      <div class="stat-label">Colleges</div>
      <a routerLink="/colleges" class="btn">View All</a>
    </div>
    
    <div class="stat-card">
      <div class="stat-value">{{ totalDepartments }}</div>
      <div class="stat-label">Departments</div>
      <a routerLink="/departments" class="btn">View All</a>
    </div>
    
    <div class="stat-card">
      <div class="stat-value">{{ totalClasses }}</div>
      <div class="stat-label">Classes</div>
      <a routerLink="/classes" class="btn">View All</a>
    </div>
    
    <div class="stat-card">
      <div class="stat-value">{{ totalStudents }}</div>
      <div class="stat-label">Students</div>
      <a routerLink="/students" class="btn">View All</a>
    </div>
  </div>
  
  <div class="search-box">
    <h2>Find Student</h2>
    <p>Search for a specific student by ID or name</p>
    <a routerLink="/search" class="btn btn-large">Search Students</a>
  </div>
</div>

// File: src/app/components/nav/nav.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-nav',
  templateUrl: './nav.component.html',
  styleUrls: ['./nav.component.css']
})
export class NavComponent {
  isMobileMenuOpen: boolean = false;

  toggleMobileMenu(): void {
    this.isMobileMenuOpen = !this.isMobileMenuOpen;
  }
}

// File: src/app/components/nav/nav.component.html

<nav class="main-nav">
  <div class="nav-container">
    <div class="logo">
      <a routerLink="/">Education Data System</a>
    </div>
    
    <button class="mobile-menu-toggle" (click)="toggleMobileMenu()">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </button>
    
    <ul class="nav-links" [class.open]="isMobileMenuOpen">
      <li><a routerLink="/" routerLinkActive="active" [routerLinkActiveOptions]="{exact: true}">Home</a></li>
      <li><a routerLink="/colleges" routerLinkActive="active">Colleges</a></li>
      <li><a routerLink="/departments" routerLinkActive="active">Departments</a></li>
      <li><a routerLink="/classes" routerLinkActive="active">Classes</a></li>
      <li><a routerLink="/students" routerLinkActive="active">Students</a></li>
      <li><a routerLink="/search" routerLinkActive="active">Search</a></li>
    </ul>
  </div>
</nav>

// File: src/app/app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { AppRoutingModule } from './app-routing.module';

import { AppComponent } from './app.component';
import { HomeComponent } from './components/home/home.component';
import { NavComponent } from './components/nav/nav.component';
import { CollegesComponent } from './components/colleges/colleges.component';
import { DepartmentsComponent } from './components/departments/departments.component';
import { ClassesComponent } from './components/classes/classes.component';
import { StudentsComponent } from './components/students/students.component';
import { StudentDetailsComponent } from './components/student-details/student-details.component';
import { StudentSearchComponent } from './components/student-search/student-search.component';

@NgModule({
  declarations: [
    AppComponent,
    HomeComponent,
    NavComponent,
    CollegesComponent,
    DepartmentsComponent,
    ClassesComponent,
    StudentsComponent,
    StudentDetailsComponent,
    StudentSearchComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    HttpClientModule,
    AppRoutingModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

// File: src/app/app.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  template: `
    <app-nav></app-nav>
    <div class="main-container">
      <router-outlet></router-outlet>
    </div>
  `,
  styles: [`
    .main-container {
      padding: 20px;
      max-width: 1200px;
      margin: 0 auto;
    }
  `]
})
export class AppComponent {
  title = 'education-data-system';
}

// File: src/styles.css

/* Global Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Roboto', Arial, sans-serif;
  line-height: 1.6;
  color: #333;
  background-color: #f5f5f5;
}

h1, h2, h3, h4 {
  margin-bottom: 1rem;
  color: #2c3e50;
}

a {
  text-decoration: none;
  color: #3498db;
}

.btn {
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: #3498db;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.btn:hover {
  background-color: #2980b9;
}

.btn-small {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
}

.btn-large {
  padding: a0.75rem 1.5rem;
  font-size: 1.125rem;
}

.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.card {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.card-header {
  padding: 1rem;
  background-color: #f8f9fa;
  border-bottom: 1px solid #e9ecef;
}

.card-body {
  padding: 1rem;
}

.card-footer {
  padding: 1rem;
  border-top: 1px solid #e9ecef;
  text-align: center;
}

.student-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1rem;
}

.student-table th,
.student-table td {
  padding: 0.75rem;
  text-align: left;
  border-bottom: 1px solid #e9ecef;
}

.student-table th {
  background-color: #f8f9fa;
  font-weight: 600;
}

.student-table tr:hover {
  background-color: #f1f3f5;
}

.search-input {
  padding: 0.5rem;
  font-size: 1rem;
  border: 1px solid #ced4da;
  border-radius: 4px;
  margin-right: 0.5rem;
  min-width: 300px;
}

.search-form {
  display: flex;
  margin-bottom: 1.5rem;
}

.not-found {
  text-align: center;
  padding: 2rem;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin: 2rem 0;
}

.stat-card {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  padding: 1.5rem;
  text-align: center;
}

/* Continuing from previous styles.css file */
.stat-value {
  font-size: 2.5rem;
  font-weight: 700;
  color: #3498db;
  margin-bottom: 0.5rem;
}

.stat-label {
  font-size: 1rem;
  color: #6c757d;
  margin-bottom: 1rem;
}

.search-box {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  padding: 2rem;
  text-align: center;
  margin: 2rem 0;
}

.student-card {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  padding: 1.5rem;
  margin-top: 1rem;
}

.student-info {
  margin-top: 1rem;
}

.student-info p {
  margin-bottom: 0.5rem;
}

/* Navigation Styles */
.main-nav {
  background-color: #2c3e50;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.nav-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.logo a {
  color: white;
  font-size: 1.5rem;
  font-weight: 700;
}

.nav-links {
  display: flex;
  list-style: none;
}

.nav-links li {
  margin-left: 1.5rem;
}

.nav-links a {
  color: #ecf0f1;
  font-weight: 500;
  transition: color 0.3s;
}

.nav-links a:hover,
.nav-links a.active {
  color: #3498db;
}

.mobile-menu-toggle {
  display: none;
  background: none;
  border: none;
  cursor: pointer;
}

.mobile-menu-toggle .bar {
  display: block;
  width: 25px;
  height: 3px;
  margin: 5px auto;
  background-color: white;
  transition: all 0.3s;
}

/* Responsive Styles */
@media (max-width: 768px) {
  .mobile-menu-toggle {
    display: block;
  }

  .nav-links {
    position: fixed;
    left: -100%;
    top: 60px;
    flex-direction: column;
    background-color: #2c3e50;
    width: 100%;
    text-align: center;
    transition: 0.3s;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
    z-index: 100;
  }

  .nav-links.open {
    left: 0;
  }

  .nav-links li {
    margin: 1rem 0;
  }

  .search-input {
    min-width: auto;
    width: 100%;
  }

  .search-form {
    flex-direction: column;
  }

  .search-form button {
    margin-top: 0.5rem;
    width: 100%;
  }

  .card-grid {
    grid-template-columns: 1fr;
  }

  .stats-grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-width: 480px) {
  .stats-grid {
    grid-template-columns: 1fr;
  }
  
  .student-table th,
  .student-table td {
    padding: 0.5rem;
    font-size: 0.875rem;
  }
}
